name: eclaire

services:
  # Backend API
  backend:
    image: ghcr.io/eclaire-labs/eclaire-backend:${BACKEND_TAG}
    # If you only loaded a local image (not from GHCR), you can switch to: eclaire-backend:${BACKEND_TAG}
    container_name: eclaire-backend
    platform: ${PLATFORM}
    expose:
      - "3001"
    env_file:
      - ./apps/backend/.env.prod
    environment:
      - NODE_ENV=production
      - PORT=3001
      - HOST=0.0.0.0
      - REDIS_URL=redis://eclaire-redis:6379
    volumes:
      - ./data:/app/data
      - ./config:/app/config
      - ./data/logs:/app/data/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped
    # Healthcheck inherited from Dockerfile (curl-based)

  # Frontend (Next.js)
  frontend:
    image: ghcr.io/eclaire-labs/eclaire-frontend:${FRONTEND_TAG}
    container_name: eclaire-frontend
    platform: ${PLATFORM}
    ports:
      - "3000:3000"
    env_file:
      - ./apps/frontend/.env.prod
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Use the internal DNS name of the backend (no host:port hardcoding for portability)
      - BACKEND_URL=http://eclaire-backend:3001
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./data/logs:/app/data/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped
    # Healthcheck inherited from Dockerfile (curl-based)

  # Workers (BullMQ)
  workers:
    image: ghcr.io/eclaire-labs/eclaire-workers:${WORKERS_TAG}
    container_name: eclaire-workers
    platform: ${PLATFORM}
    env_file:
      - ./apps/workers/.env.prod
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://eclaire-redis:6379
      - BACKEND_URL=http://eclaire-backend:3001
      - OLLAMA_API_URL=http://host.docker.internal:11435/api/generate
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./data:/app/data
      - ./data/browser-data:/app/browser-data
      - ./config:/app/config
      - ./data/logs:/app/data/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: json-file
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped
    # Healthcheck inherited from Dockerfile (curl-based)

networks:
  default:
    name: eclaire-net
    external: true

